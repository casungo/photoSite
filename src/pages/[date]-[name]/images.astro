---
import BaseLayout from "@layouts/BaseLayout.astro";
import Photo from "@components/Photo.astro";
import TitleCardProj from "@components/TitleCardProj.astro";

export async function getStaticPaths() {
  const projectFiles = await Astro.glob("../../../public/proj/*");
  const filenameRegex = /(\d{8}) - (.+?)(\.[-\w]{8})?\.jpg/;

  return projectFiles
    .map((image) => {
      const imagePath = image.default;
      const imagePathSrc = imagePath.src;
      const match = imagePathSrc.match(filenameRegex);
      const [_, date, name] = match;

      return {
        params: { date, name },
      };
    })
    .filter(Boolean);
}

const { date, name } = Astro.params;

function formattedDate() {
  const day = date.slice(6, 8);
  const month = date.slice(4, 6);
  const year = date.slice(0, 4);
  const formattedDate = `${day}/${month}/${year}`;
  return formattedDate;
}

async function fetchThumbImgs() {
  const photos = await Astro.glob("../../../public/proj/*/*");
  const filenameRegex = /(\d{8}) - (.+?)(\.[-\w]{8})?\.jpg/;

  const filteredPhotos = photos.filter((image) => {
    const imagePath = image.default;
    const imagePathSrc = imagePath.src;
    const match = imagePathSrc.match(filenameRegex);
    const [_, date, name] = match;

    const isThumbnail = imagePathSrc.includes("_thumb");
    const hasMatchingName = name.includes(Astro.params.name);
    const hasMatchingDate = date.includes(Astro.params.date);

    return isThumbnail && hasMatchingName && hasMatchingDate;
  });

  return filteredPhotos.map((image) => {
    const imagePath = image.default;
    const imagePathSrc = imagePath.src;

    return {
      imgThumb: imagePathSrc,
    };
  });
}

async function fetchPhotos() {
  const photos = await Astro.glob("../../../public/proj/**");
  const filenameRegex = /(\d{8}) - (.+?)(\.[-\w]{8})?\.jpg/;

  const filteredPhotos = photos.filter((image) => {
    const imagePath = image.default;
    const imagePathSrc = imagePath.src;
    const match = imagePathSrc.match(filenameRegex);
    const [_, date, name] = match;

    const isThumbnail = imagePathSrc.includes("_thumb");
    const hasMatchingName = name.includes(Astro.params.name);
    const hasMatchingDate = date.includes(Astro.params.date);
    const hasUnderscore = imagePathSrc.includes(
      "_",
      imagePathSrc.lastIndexOf("/") + 1,
    );

    return !isThumbnail && hasMatchingName && hasMatchingDate && hasUnderscore;
  });

  const thumbImgs = await fetchThumbImgs();

  return filteredPhotos.map((image, index) => {
    const imagePath = image.default;
    const imagePathSrc = imagePath.src;
    const width = imagePath.width;
    const height = imagePath.height;

    return {
      img: imagePathSrc,
      imgThumb: thumbImgs[index].imgThumb,
      width,
      height,
    };
  });
}

async function fetchHeroImage() {
  const photos = await Astro.glob("../../../public/proj/*");
  const filenameRegex = /(\d{8}) - (.+?)(\.[-\w]{8})?\.jpg/;

  const filteredPhotos = photos.filter((image) => {
    const imagePath = image.default;
    const imagePathSrc = imagePath.src;
    const match = imagePathSrc.match(filenameRegex);
    const [_, date, name] = match;

    const hasMatchingName = name.includes(Astro.params.name);
    const hasMatchingDate = date.includes(Astro.params.date);

    return hasMatchingName && hasMatchingDate;
  });

  const thumbImgs = await fetchThumbImgs();

  return filteredPhotos.map((image, index) => {
    const imagePath = image.default;
    const imagePathSrc = imagePath.src;

    return {
      img: imagePathSrc,
    };
  });
}

const photos = await fetchPhotos();
const heroImage = await fetchHeroImage();
---

<BaseLayout>
  <link rel="stylesheet" href="/photoswipe/photoswipe.css" slot="head" />
  <h1 class="text-center">
    <TitleCardProj
      img={heroImage[0].img}
      title={name}
      contentDate={formattedDate()}
      contentTitle={name}
    />
  </h1>
  <div class="pswp-gallery" id="gallery">
    {photos.map((photo) => <Photo {...photo} />)}
  </div>
</BaseLayout>

<script type="module">
  import PhotoSwipeLightbox from "/photoswipe/photoswipe-lightbox.esm.js";

  const lightbox = new PhotoSwipeLightbox({
    gallery: "#gallery",
    children: "a",
    pswpModule: () => import("/photoswipe/photoswipe.esm.js"),
    wheelToZoom: true,
    pinchToClose: false,
  });

  lightbox.init();
</script>
